# coding: utf-8

"""
    MongoDB Atlas Administration API

    The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlas import schemas  # noqa: F401


class DefaultEventViewForNdsGroup(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Other events which don't have extra details beside of basic one.
    """


    class MetaOapg:
        required = {
            "created",
            "eventTypeName",
            "id",
        }
        
        class properties:
            created = schemas.DateTimeSchema
            
            
            class eventTypeName(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "AUTO_INDEXING_ENABLED": "AUTO_INDEXING_ENABLED",
                        "AUTO_INDEXING_DISABLED": "AUTO_INDEXING_DISABLED",
                        "AUTO_INDEXING_INDEX_BUILD_SUBMITTED": "AUTO_INDEXING_INDEX_BUILD_SUBMITTED",
                        "AUTO_INDEXING_SLOW_INDEX_BUILD": "AUTO_INDEXING_SLOW_INDEX_BUILD",
                        "AUTO_INDEXING_STALLED_INDEX_BUILD": "AUTO_INDEXING_STALLED_INDEX_BUILD",
                        "AUTO_INDEXING_FAILED_INDEX_BUILD": "AUTO_INDEXING_FAILED_INDEX_BUILD",
                        "AUTO_INDEXING_COMPLETED_INDEX_BUILD": "AUTO_INDEXING_COMPLETED_INDEX_BUILD",
                        "PEER_CREATED": "PEER_CREATED",
                        "PEER_DELETED": "PEER_DELETED",
                        "PEER_UPDATED": "PEER_UPDATED",
                        "AZURE_PEER_CREATED": "AZURE_PEER_CREATED",
                        "AZURE_PEER_UPDATED": "AZURE_PEER_UPDATED",
                        "AZURE_PEER_ACTIVE": "AZURE_PEER_ACTIVE",
                        "AZURE_PEER_DELETED": "AZURE_PEER_DELETED",
                        "CLUSTER_CONNECTION_GET_DATABASES": "CLUSTER_CONNECTION_GET_DATABASES",
                        "CLUSTER_CONNECTION_GET_DATABASE_COLLECTIONS": "CLUSTER_CONNECTION_GET_DATABASE_COLLECTIONS",
                        "CLUSTER_CONNECTION_GET_DATABASE_NAMESPACES": "CLUSTER_CONNECTION_GET_DATABASE_NAMESPACES",
                        "CLUSTER_CONNECTION_AGGREGATE": "CLUSTER_CONNECTION_AGGREGATE",
                        "CLUSTER_CONNECTION_CREATE_COLLECTION": "CLUSTER_CONNECTION_CREATE_COLLECTION",
                        "CLUSTER_CONNECTION_SAMPLE_COLLECTION_FIELD_NAMES": "CLUSTER_CONNECTION_SAMPLE_COLLECTION_FIELD_NAMES",
                        "CPS_SNAPSHOT_SUCCESSFUL": "CPS_SNAPSHOT_SUCCESSFUL",
                        "CPS_SNAPSHOT_FALLBACK_SUCCESSFUL": "CPS_SNAPSHOT_FALLBACK_SUCCESSFUL",
                        "CPS_SNAPSHOT_BEHIND": "CPS_SNAPSHOT_BEHIND",
                        "CPS_SNAPSHOT_FALLBACK_FAILED": "CPS_SNAPSHOT_FALLBACK_FAILED",
                        "CPS_RESTORE_SUCCESSFUL": "CPS_RESTORE_SUCCESSFUL",
                        "CPS_EXPORT_SUCCESSFUL": "CPS_EXPORT_SUCCESSFUL",
                        "CPS_RESTORE_FAILED": "CPS_RESTORE_FAILED",
                        "CPS_EXPORT_FAILED": "CPS_EXPORT_FAILED",
                        "CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED": "CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED",
                        "CPS_DATA_PROTECTION_ENABLE_REQUESTED": "CPS_DATA_PROTECTION_ENABLE_REQUESTED",
                        "CPS_DATA_PROTECTION_ENABLED": "CPS_DATA_PROTECTION_ENABLED",
                        "CPS_DATA_PROTECTION_UPDATE_REQUESTED": "CPS_DATA_PROTECTION_UPDATE_REQUESTED",
                        "CPS_DATA_PROTECTION_UPDATED": "CPS_DATA_PROTECTION_UPDATED",
                        "CPS_DATA_PROTECTION_DISABLE_REQUESTED": "CPS_DATA_PROTECTION_DISABLE_REQUESTED",
                        "CPS_DATA_PROTECTION_DISABLED": "CPS_DATA_PROTECTION_DISABLED",
                        "CPS_RESTORE_REQUESTED_AUDIT": "CPS_RESTORE_REQUESTED_AUDIT",
                        "CPS_SNAPSHOT_SCHEDULE_UPDATED_AUDIT": "CPS_SNAPSHOT_SCHEDULE_UPDATED_AUDIT",
                        "CPS_SNAPSHOT_DELETED_AUDIT": "CPS_SNAPSHOT_DELETED_AUDIT",
                        "CPS_SNAPSHOT_RETENTION_MODIFIED_AUDIT": "CPS_SNAPSHOT_RETENTION_MODIFIED_AUDIT",
                        "CPS_SNAPSHOT_IN_PROGRESS_AUDIT": "CPS_SNAPSHOT_IN_PROGRESS_AUDIT",
                        "CPS_SNAPSHOT_COMPLETED_AUDIT": "CPS_SNAPSHOT_COMPLETED_AUDIT",
                        "CPS_ON_DEMAND_SNAPSHOT_REQUESTED": "CPS_ON_DEMAND_SNAPSHOT_REQUESTED",
                        "AWS_ENCRYPTION_KEY_ROTATED": "AWS_ENCRYPTION_KEY_ROTATED",
                        "AWS_ENCRYPTION_KEY_NEEDS_ROTATION": "AWS_ENCRYPTION_KEY_NEEDS_ROTATION",
                        "AZURE_ENCRYPTION_KEY_ROTATED": "AZURE_ENCRYPTION_KEY_ROTATED",
                        "AZURE_ENCRYPTION_KEY_NEEDS_ROTATION": "AZURE_ENCRYPTION_KEY_NEEDS_ROTATION",
                        "GCP_ENCRYPTION_KEY_ROTATED": "GCP_ENCRYPTION_KEY_ROTATED",
                        "GCP_ENCRYPTION_KEY_NEEDS_ROTATION": "GCP_ENCRYPTION_KEY_NEEDS_ROTATION",
                        "BUCKET_CREATED_AUDIT": "BUCKET_CREATED_AUDIT",
                        "BUCKET_DELETED_AUDIT": "BUCKET_DELETED_AUDIT",
                        "GCP_PEER_CREATED": "GCP_PEER_CREATED",
                        "GCP_PEER_DELETED": "GCP_PEER_DELETED",
                        "GCP_PEER_UPDATED": "GCP_PEER_UPDATED",
                        "GCP_PEER_ACTIVE": "GCP_PEER_ACTIVE",
                        "GCP_PEER_INACTIVE": "GCP_PEER_INACTIVE",
                        "DATA_EXPLORER_ENABLED": "DATA_EXPLORER_ENABLED",
                        "DATA_EXPLORER_DISABLED": "DATA_EXPLORER_DISABLED",
                        "CREDIT_CARD_ADDED": "CREDIT_CARD_ADDED",
                        "CREDIT_CARD_UPDATED": "CREDIT_CARD_UPDATED",
                        "GROUP_DELETED": "GROUP_DELETED",
                        "GROUP_CREATED": "GROUP_CREATED",
                        "GROUP_MOVED": "GROUP_MOVED",
                        "GROUP_TEMPORARILY_ACTIVATED": "GROUP_TEMPORARILY_ACTIVATED",
                        "TEMPORARILY_ACTIVATED": "TEMPORARILY_ACTIVATED",
                        "GROUP_ACTIVATED": "GROUP_ACTIVATED",
                        "ACTIVATED": "ACTIVATED",
                        "GROUP_LOCKED": "GROUP_LOCKED",
                        "LOCKED": "LOCKED",
                        "GROUP_SUSPENDED": "GROUP_SUSPENDED",
                        "SUSPENDED": "SUSPENDED",
                        "GROUP_FLUSHED": "GROUP_FLUSHED",
                        "FLUSHED": "FLUSHED",
                        "GROUP_NAME_CHANGED": "GROUP_NAME_CHANGED",
                        "GROUP_CHARTS_ACTIVATION_REQUESTED": "GROUP_CHARTS_ACTIVATION_REQUESTED",
                        "CHARTS_ACTIVATION_REQUESTED": "CHARTS_ACTIVATION_REQUESTED",
                        "GROUP_CHARTS_ACTIVATED": "GROUP_CHARTS_ACTIVATED",
                        "CHARTS_ACTIVATED": "CHARTS_ACTIVATED",
                        "GROUP_CHARTS_UPGRADED": "GROUP_CHARTS_UPGRADED",
                        "CHARTS_UPGRADED": "CHARTS_UPGRADED",
                        "GROUP_CHARTS_RESET": "GROUP_CHARTS_RESET",
                        "CHARTS_RESET": "CHARTS_RESET",
                        "PAID_IN_FULL": "PAID_IN_FULL",
                        "DELINQUENT": "DELINQUENT",
                        "ALL_USERS_HAVE_MULTI_FACTOR_AUTH": "ALL_USERS_HAVE_MULTI_FACTOR_AUTH",
                        "ALL_USERS_HAVE_MULTIFACTOR_AUTH": "ALL_USERS_HAVE_MULTIFACTOR_AUTH",
                        "USERS_WITHOUT_MULTI_FACTOR_AUTH": "USERS_WITHOUT_MULTI_FACTOR_AUTH",
                        "USERS_WITHOUT_MULTIFACTOR_AUTH": "USERS_WITHOUT_MULTIFACTOR_AUTH",
                        "M0_CLUSTERS_PER_GROUP_WITHIN_LIMIT": "M0_CLUSTERS_PER_GROUP_WITHIN_LIMIT",
                        "MAX_M0_CLUSTERS_PER_GROUP_EXCEEDED": "MAX_M0_CLUSTERS_PER_GROUP_EXCEEDED",
                        "INTEGRATION_CONFIGURED": "INTEGRATION_CONFIGURED",
                        "INTEGRATION_REMOVED": "INTEGRATION_REMOVED",
                        "ROLLING_INDEX_FAILED_INDEX_BUILD": "ROLLING_INDEX_FAILED_INDEX_BUILD",
                        "ROLLING_INDEX_SUCCESS_INDEX_BUILD": "ROLLING_INDEX_SUCCESS_INDEX_BUILD",
                        "INDEX_FAILED_INDEX_BUILD": "INDEX_FAILED_INDEX_BUILD",
                        "INDEX_SUCCESS_INDEX_BUILD": "INDEX_SUCCESS_INDEX_BUILD",
                        "MAINTENANCE_IN_ADVANCED": "MAINTENANCE_IN_ADVANCED",
                        "MAINTENANCE_AUTO_DEFERRED": "MAINTENANCE_AUTO_DEFERRED",
                        "MAINTENANCE_STARTED": "MAINTENANCE_STARTED",
                        "MAINTENANCE_NO_LONGER_NEEDED": "MAINTENANCE_NO_LONGER_NEEDED",
                        "SERVERLESS_AUTO_SCALING_INITIATED": "SERVERLESS_AUTO_SCALING_INITIATED",
                        "SERVERLESS_VERTICAL_SCALING_INITIATED": "SERVERLESS_VERTICAL_SCALING_INITIATED",
                        "SERVERLESS_HORIZONTAL_SCALING_INITIATED": "SERVERLESS_HORIZONTAL_SCALING_INITIATED",
                        "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_CREATED": "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_CREATED",
                        "TENANT_ENDPOINT_SERVICE_CREATED": "TENANT_ENDPOINT_SERVICE_CREATED",
                        "TENANT_ENDPOINT_SERVICE_AVAILABLE": "TENANT_ENDPOINT_SERVICE_AVAILABLE",
                        "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_DELETE_REQUESTED": "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_DELETE_REQUESTED",
                        "TENANT_ENDPOINT_SERVICE_DELETED": "TENANT_ENDPOINT_SERVICE_DELETED",
                        "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_DELETED": "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_DELETED",
                        "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_NUM_DESIRED_ENDPOINT_SERVICES_INCREASED": "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_NUM_DESIRED_ENDPOINT_SERVICES_INCREASED",
                        "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_RESOLVED": "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_RESOLVED",
                        "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK": "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK",
                        "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_RESOLVED": "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_RESOLVED",
                        "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_CHECK": "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_CHECK",
                        "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_RESOLVED": "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_RESOLVED",
                        "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK": "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK",
                        "ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_CHECK": "ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_CHECK",
                        "ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_RESOLVED": "ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_RESOLVED",
                        "ONLINE_ARCHIVE_UP_TO_DATE": "ONLINE_ARCHIVE_UP_TO_DATE",
                        "ONLINE_ARCHIVE_DATA_EXPIRATION_RESOLVED": "ONLINE_ARCHIVE_DATA_EXPIRATION_RESOLVED",
                        "ONLINE_ARCHIVE_MAX_CONSECUTIVE_OFFLOAD_WINDOWS_CHECK": "ONLINE_ARCHIVE_MAX_CONSECUTIVE_OFFLOAD_WINDOWS_CHECK",
                        "ENDPOINT_SERVICE_CREATED": "ENDPOINT_SERVICE_CREATED",
                        "ENDPOINT_SERVICE_DELETED": "ENDPOINT_SERVICE_DELETED",
                        "INTERFACE_ENDPOINT_CREATED": "INTERFACE_ENDPOINT_CREATED",
                        "INTERFACE_ENDPOINT_DELETED": "INTERFACE_ENDPOINT_DELETED",
                        "INTERFACE_ENDPOINT_PATCHED": "INTERFACE_ENDPOINT_PATCHED",
                        "SERVERLESS_DEPLOYMENT_CREATED": "SERVERLESS_DEPLOYMENT_CREATED",
                        "SERVERLESS_DEPLOYMENT_DELETED": "SERVERLESS_DEPLOYMENT_DELETED",
                        "SERVERLESS_DEPLOYMENT_UPDATED": "SERVERLESS_DEPLOYMENT_UPDATED",
                        "SERVERLESS_DEPLOYMENT_INSTANCE_REPLACED": "SERVERLESS_DEPLOYMENT_INSTANCE_REPLACED",
                        "SERVERLESS_DEPLOYMENT_INSTANCE_REBOOTED": "SERVERLESS_DEPLOYMENT_INSTANCE_REBOOTED",
                        "SERVERLESS_DEPLOYMENT_ENDPOINT_SERVICE_LINKED": "SERVERLESS_DEPLOYMENT_ENDPOINT_SERVICE_LINKED",
                        "SERVERLESS_DEPLOYMENT_ENDPOINT_SERVICE_UNLINKED": "SERVERLESS_DEPLOYMENT_ENDPOINT_SERVICE_UNLINKED",
                        "INSIDE_SERVERLESS_METRIC_THRESHOLD": "INSIDE_SERVERLESS_METRIC_THRESHOLD",
                        "OUTSIDE_SERVERLESS_METRIC_THRESHOLD": "OUTSIDE_SERVERLESS_METRIC_THRESHOLD",
                        "SETUP_SERVERLESS_INITIATED": "SETUP_SERVERLESS_INITIATED",
                        "CASE_CREATED": "CASE_CREATED",
                        "SUPPORT_EMAILS_SENT_SUCCESSFULLY": "SUPPORT_EMAILS_SENT_SUCCESSFULLY",
                        "SUPPORT_EMAILS_SENT_FAILURE": "SUPPORT_EMAILS_SENT_FAILURE",
                        "TENANT_SNAPSHOT_STARTED_AUDIT": "TENANT_SNAPSHOT_STARTED_AUDIT",
                        "TENANT_SNAPSHOT_COMPLETED_AUDIT": "TENANT_SNAPSHOT_COMPLETED_AUDIT",
                        "TENANT_SNAPSHOT_DELETED_AUDIT": "TENANT_SNAPSHOT_DELETED_AUDIT",
                        "TENANT_RESTORE_REQUESTED_AUDIT": "TENANT_RESTORE_REQUESTED_AUDIT",
                        "TENANT_RESTORE_COMPLETED_AUDIT": "TENANT_RESTORE_COMPLETED_AUDIT",
                        "TENANT_SNAPSHOT_DOWNLOAD_REQUESTED_AUDIT": "TENANT_SNAPSHOT_DOWNLOAD_REQUESTED_AUDIT",
                        "CLUSTER_VERSION_FIXED": "CLUSTER_VERSION_FIXED",
                        "CLUSTER_VERSION_UNFIXED": "CLUSTER_VERSION_UNFIXED",
                        "CLUSTER_FCV_FIXED": "CLUSTER_FCV_FIXED",
                        "CLUSTER_FCV_UNFIXED": "CLUSTER_FCV_UNFIXED",
                        "AGENT_VERSION_FIXED": "AGENT_VERSION_FIXED",
                        "AGENT_VERSION_UNFIXED": "AGENT_VERSION_UNFIXED",
                    }
                
                @schemas.classproperty
                def AUTO_INDEXING_ENABLED(cls):
                    return cls("AUTO_INDEXING_ENABLED")
                
                @schemas.classproperty
                def AUTO_INDEXING_DISABLED(cls):
                    return cls("AUTO_INDEXING_DISABLED")
                
                @schemas.classproperty
                def AUTO_INDEXING_INDEX_BUILD_SUBMITTED(cls):
                    return cls("AUTO_INDEXING_INDEX_BUILD_SUBMITTED")
                
                @schemas.classproperty
                def AUTO_INDEXING_SLOW_INDEX_BUILD(cls):
                    return cls("AUTO_INDEXING_SLOW_INDEX_BUILD")
                
                @schemas.classproperty
                def AUTO_INDEXING_STALLED_INDEX_BUILD(cls):
                    return cls("AUTO_INDEXING_STALLED_INDEX_BUILD")
                
                @schemas.classproperty
                def AUTO_INDEXING_FAILED_INDEX_BUILD(cls):
                    return cls("AUTO_INDEXING_FAILED_INDEX_BUILD")
                
                @schemas.classproperty
                def AUTO_INDEXING_COMPLETED_INDEX_BUILD(cls):
                    return cls("AUTO_INDEXING_COMPLETED_INDEX_BUILD")
                
                @schemas.classproperty
                def PEER_CREATED(cls):
                    return cls("PEER_CREATED")
                
                @schemas.classproperty
                def PEER_DELETED(cls):
                    return cls("PEER_DELETED")
                
                @schemas.classproperty
                def PEER_UPDATED(cls):
                    return cls("PEER_UPDATED")
                
                @schemas.classproperty
                def AZURE_PEER_CREATED(cls):
                    return cls("AZURE_PEER_CREATED")
                
                @schemas.classproperty
                def AZURE_PEER_UPDATED(cls):
                    return cls("AZURE_PEER_UPDATED")
                
                @schemas.classproperty
                def AZURE_PEER_ACTIVE(cls):
                    return cls("AZURE_PEER_ACTIVE")
                
                @schemas.classproperty
                def AZURE_PEER_DELETED(cls):
                    return cls("AZURE_PEER_DELETED")
                
                @schemas.classproperty
                def CLUSTER_CONNECTION_GET_DATABASES(cls):
                    return cls("CLUSTER_CONNECTION_GET_DATABASES")
                
                @schemas.classproperty
                def CLUSTER_CONNECTION_GET_DATABASE_COLLECTIONS(cls):
                    return cls("CLUSTER_CONNECTION_GET_DATABASE_COLLECTIONS")
                
                @schemas.classproperty
                def CLUSTER_CONNECTION_GET_DATABASE_NAMESPACES(cls):
                    return cls("CLUSTER_CONNECTION_GET_DATABASE_NAMESPACES")
                
                @schemas.classproperty
                def CLUSTER_CONNECTION_AGGREGATE(cls):
                    return cls("CLUSTER_CONNECTION_AGGREGATE")
                
                @schemas.classproperty
                def CLUSTER_CONNECTION_CREATE_COLLECTION(cls):
                    return cls("CLUSTER_CONNECTION_CREATE_COLLECTION")
                
                @schemas.classproperty
                def CLUSTER_CONNECTION_SAMPLE_COLLECTION_FIELD_NAMES(cls):
                    return cls("CLUSTER_CONNECTION_SAMPLE_COLLECTION_FIELD_NAMES")
                
                @schemas.classproperty
                def CPS_SNAPSHOT_SUCCESSFUL(cls):
                    return cls("CPS_SNAPSHOT_SUCCESSFUL")
                
                @schemas.classproperty
                def CPS_SNAPSHOT_FALLBACK_SUCCESSFUL(cls):
                    return cls("CPS_SNAPSHOT_FALLBACK_SUCCESSFUL")
                
                @schemas.classproperty
                def CPS_SNAPSHOT_BEHIND(cls):
                    return cls("CPS_SNAPSHOT_BEHIND")
                
                @schemas.classproperty
                def CPS_SNAPSHOT_FALLBACK_FAILED(cls):
                    return cls("CPS_SNAPSHOT_FALLBACK_FAILED")
                
                @schemas.classproperty
                def CPS_RESTORE_SUCCESSFUL(cls):
                    return cls("CPS_RESTORE_SUCCESSFUL")
                
                @schemas.classproperty
                def CPS_EXPORT_SUCCESSFUL(cls):
                    return cls("CPS_EXPORT_SUCCESSFUL")
                
                @schemas.classproperty
                def CPS_RESTORE_FAILED(cls):
                    return cls("CPS_RESTORE_FAILED")
                
                @schemas.classproperty
                def CPS_EXPORT_FAILED(cls):
                    return cls("CPS_EXPORT_FAILED")
                
                @schemas.classproperty
                def CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED(cls):
                    return cls("CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED")
                
                @schemas.classproperty
                def CPS_DATA_PROTECTION_ENABLE_REQUESTED(cls):
                    return cls("CPS_DATA_PROTECTION_ENABLE_REQUESTED")
                
                @schemas.classproperty
                def CPS_DATA_PROTECTION_ENABLED(cls):
                    return cls("CPS_DATA_PROTECTION_ENABLED")
                
                @schemas.classproperty
                def CPS_DATA_PROTECTION_UPDATE_REQUESTED(cls):
                    return cls("CPS_DATA_PROTECTION_UPDATE_REQUESTED")
                
                @schemas.classproperty
                def CPS_DATA_PROTECTION_UPDATED(cls):
                    return cls("CPS_DATA_PROTECTION_UPDATED")
                
                @schemas.classproperty
                def CPS_DATA_PROTECTION_DISABLE_REQUESTED(cls):
                    return cls("CPS_DATA_PROTECTION_DISABLE_REQUESTED")
                
                @schemas.classproperty
                def CPS_DATA_PROTECTION_DISABLED(cls):
                    return cls("CPS_DATA_PROTECTION_DISABLED")
                
                @schemas.classproperty
                def CPS_RESTORE_REQUESTED_AUDIT(cls):
                    return cls("CPS_RESTORE_REQUESTED_AUDIT")
                
                @schemas.classproperty
                def CPS_SNAPSHOT_SCHEDULE_UPDATED_AUDIT(cls):
                    return cls("CPS_SNAPSHOT_SCHEDULE_UPDATED_AUDIT")
                
                @schemas.classproperty
                def CPS_SNAPSHOT_DELETED_AUDIT(cls):
                    return cls("CPS_SNAPSHOT_DELETED_AUDIT")
                
                @schemas.classproperty
                def CPS_SNAPSHOT_RETENTION_MODIFIED_AUDIT(cls):
                    return cls("CPS_SNAPSHOT_RETENTION_MODIFIED_AUDIT")
                
                @schemas.classproperty
                def CPS_SNAPSHOT_IN_PROGRESS_AUDIT(cls):
                    return cls("CPS_SNAPSHOT_IN_PROGRESS_AUDIT")
                
                @schemas.classproperty
                def CPS_SNAPSHOT_COMPLETED_AUDIT(cls):
                    return cls("CPS_SNAPSHOT_COMPLETED_AUDIT")
                
                @schemas.classproperty
                def CPS_ON_DEMAND_SNAPSHOT_REQUESTED(cls):
                    return cls("CPS_ON_DEMAND_SNAPSHOT_REQUESTED")
                
                @schemas.classproperty
                def AWS_ENCRYPTION_KEY_ROTATED(cls):
                    return cls("AWS_ENCRYPTION_KEY_ROTATED")
                
                @schemas.classproperty
                def AWS_ENCRYPTION_KEY_NEEDS_ROTATION(cls):
                    return cls("AWS_ENCRYPTION_KEY_NEEDS_ROTATION")
                
                @schemas.classproperty
                def AZURE_ENCRYPTION_KEY_ROTATED(cls):
                    return cls("AZURE_ENCRYPTION_KEY_ROTATED")
                
                @schemas.classproperty
                def AZURE_ENCRYPTION_KEY_NEEDS_ROTATION(cls):
                    return cls("AZURE_ENCRYPTION_KEY_NEEDS_ROTATION")
                
                @schemas.classproperty
                def GCP_ENCRYPTION_KEY_ROTATED(cls):
                    return cls("GCP_ENCRYPTION_KEY_ROTATED")
                
                @schemas.classproperty
                def GCP_ENCRYPTION_KEY_NEEDS_ROTATION(cls):
                    return cls("GCP_ENCRYPTION_KEY_NEEDS_ROTATION")
                
                @schemas.classproperty
                def BUCKET_CREATED_AUDIT(cls):
                    return cls("BUCKET_CREATED_AUDIT")
                
                @schemas.classproperty
                def BUCKET_DELETED_AUDIT(cls):
                    return cls("BUCKET_DELETED_AUDIT")
                
                @schemas.classproperty
                def GCP_PEER_CREATED(cls):
                    return cls("GCP_PEER_CREATED")
                
                @schemas.classproperty
                def GCP_PEER_DELETED(cls):
                    return cls("GCP_PEER_DELETED")
                
                @schemas.classproperty
                def GCP_PEER_UPDATED(cls):
                    return cls("GCP_PEER_UPDATED")
                
                @schemas.classproperty
                def GCP_PEER_ACTIVE(cls):
                    return cls("GCP_PEER_ACTIVE")
                
                @schemas.classproperty
                def GCP_PEER_INACTIVE(cls):
                    return cls("GCP_PEER_INACTIVE")
                
                @schemas.classproperty
                def DATA_EXPLORER_ENABLED(cls):
                    return cls("DATA_EXPLORER_ENABLED")
                
                @schemas.classproperty
                def DATA_EXPLORER_DISABLED(cls):
                    return cls("DATA_EXPLORER_DISABLED")
                
                @schemas.classproperty
                def CREDIT_CARD_ADDED(cls):
                    return cls("CREDIT_CARD_ADDED")
                
                @schemas.classproperty
                def CREDIT_CARD_UPDATED(cls):
                    return cls("CREDIT_CARD_UPDATED")
                
                @schemas.classproperty
                def GROUP_DELETED(cls):
                    return cls("GROUP_DELETED")
                
                @schemas.classproperty
                def GROUP_CREATED(cls):
                    return cls("GROUP_CREATED")
                
                @schemas.classproperty
                def GROUP_MOVED(cls):
                    return cls("GROUP_MOVED")
                
                @schemas.classproperty
                def GROUP_TEMPORARILY_ACTIVATED(cls):
                    return cls("GROUP_TEMPORARILY_ACTIVATED")
                
                @schemas.classproperty
                def TEMPORARILY_ACTIVATED(cls):
                    return cls("TEMPORARILY_ACTIVATED")
                
                @schemas.classproperty
                def GROUP_ACTIVATED(cls):
                    return cls("GROUP_ACTIVATED")
                
                @schemas.classproperty
                def ACTIVATED(cls):
                    return cls("ACTIVATED")
                
                @schemas.classproperty
                def GROUP_LOCKED(cls):
                    return cls("GROUP_LOCKED")
                
                @schemas.classproperty
                def LOCKED(cls):
                    return cls("LOCKED")
                
                @schemas.classproperty
                def GROUP_SUSPENDED(cls):
                    return cls("GROUP_SUSPENDED")
                
                @schemas.classproperty
                def SUSPENDED(cls):
                    return cls("SUSPENDED")
                
                @schemas.classproperty
                def GROUP_FLUSHED(cls):
                    return cls("GROUP_FLUSHED")
                
                @schemas.classproperty
                def FLUSHED(cls):
                    return cls("FLUSHED")
                
                @schemas.classproperty
                def GROUP_NAME_CHANGED(cls):
                    return cls("GROUP_NAME_CHANGED")
                
                @schemas.classproperty
                def GROUP_CHARTS_ACTIVATION_REQUESTED(cls):
                    return cls("GROUP_CHARTS_ACTIVATION_REQUESTED")
                
                @schemas.classproperty
                def CHARTS_ACTIVATION_REQUESTED(cls):
                    return cls("CHARTS_ACTIVATION_REQUESTED")
                
                @schemas.classproperty
                def GROUP_CHARTS_ACTIVATED(cls):
                    return cls("GROUP_CHARTS_ACTIVATED")
                
                @schemas.classproperty
                def CHARTS_ACTIVATED(cls):
                    return cls("CHARTS_ACTIVATED")
                
                @schemas.classproperty
                def GROUP_CHARTS_UPGRADED(cls):
                    return cls("GROUP_CHARTS_UPGRADED")
                
                @schemas.classproperty
                def CHARTS_UPGRADED(cls):
                    return cls("CHARTS_UPGRADED")
                
                @schemas.classproperty
                def GROUP_CHARTS_RESET(cls):
                    return cls("GROUP_CHARTS_RESET")
                
                @schemas.classproperty
                def CHARTS_RESET(cls):
                    return cls("CHARTS_RESET")
                
                @schemas.classproperty
                def PAID_IN_FULL(cls):
                    return cls("PAID_IN_FULL")
                
                @schemas.classproperty
                def DELINQUENT(cls):
                    return cls("DELINQUENT")
                
                @schemas.classproperty
                def ALL_USERS_HAVE_MULTI_FACTOR_AUTH(cls):
                    return cls("ALL_USERS_HAVE_MULTI_FACTOR_AUTH")
                
                @schemas.classproperty
                def ALL_USERS_HAVE_MULTIFACTOR_AUTH(cls):
                    return cls("ALL_USERS_HAVE_MULTIFACTOR_AUTH")
                
                @schemas.classproperty
                def USERS_WITHOUT_MULTI_FACTOR_AUTH(cls):
                    return cls("USERS_WITHOUT_MULTI_FACTOR_AUTH")
                
                @schemas.classproperty
                def USERS_WITHOUT_MULTIFACTOR_AUTH(cls):
                    return cls("USERS_WITHOUT_MULTIFACTOR_AUTH")
                
                @schemas.classproperty
                def M0_CLUSTERS_PER_GROUP_WITHIN_LIMIT(cls):
                    return cls("M0_CLUSTERS_PER_GROUP_WITHIN_LIMIT")
                
                @schemas.classproperty
                def MAX_M0_CLUSTERS_PER_GROUP_EXCEEDED(cls):
                    return cls("MAX_M0_CLUSTERS_PER_GROUP_EXCEEDED")
                
                @schemas.classproperty
                def INTEGRATION_CONFIGURED(cls):
                    return cls("INTEGRATION_CONFIGURED")
                
                @schemas.classproperty
                def INTEGRATION_REMOVED(cls):
                    return cls("INTEGRATION_REMOVED")
                
                @schemas.classproperty
                def ROLLING_INDEX_FAILED_INDEX_BUILD(cls):
                    return cls("ROLLING_INDEX_FAILED_INDEX_BUILD")
                
                @schemas.classproperty
                def ROLLING_INDEX_SUCCESS_INDEX_BUILD(cls):
                    return cls("ROLLING_INDEX_SUCCESS_INDEX_BUILD")
                
                @schemas.classproperty
                def INDEX_FAILED_INDEX_BUILD(cls):
                    return cls("INDEX_FAILED_INDEX_BUILD")
                
                @schemas.classproperty
                def INDEX_SUCCESS_INDEX_BUILD(cls):
                    return cls("INDEX_SUCCESS_INDEX_BUILD")
                
                @schemas.classproperty
                def MAINTENANCE_IN_ADVANCED(cls):
                    return cls("MAINTENANCE_IN_ADVANCED")
                
                @schemas.classproperty
                def MAINTENANCE_AUTO_DEFERRED(cls):
                    return cls("MAINTENANCE_AUTO_DEFERRED")
                
                @schemas.classproperty
                def MAINTENANCE_STARTED(cls):
                    return cls("MAINTENANCE_STARTED")
                
                @schemas.classproperty
                def MAINTENANCE_NO_LONGER_NEEDED(cls):
                    return cls("MAINTENANCE_NO_LONGER_NEEDED")
                
                @schemas.classproperty
                def SERVERLESS_AUTO_SCALING_INITIATED(cls):
                    return cls("SERVERLESS_AUTO_SCALING_INITIATED")
                
                @schemas.classproperty
                def SERVERLESS_VERTICAL_SCALING_INITIATED(cls):
                    return cls("SERVERLESS_VERTICAL_SCALING_INITIATED")
                
                @schemas.classproperty
                def SERVERLESS_HORIZONTAL_SCALING_INITIATED(cls):
                    return cls("SERVERLESS_HORIZONTAL_SCALING_INITIATED")
                
                @schemas.classproperty
                def TENANT_ENDPOINT_SERVICE_DEPLOYMENT_CREATED(cls):
                    return cls("TENANT_ENDPOINT_SERVICE_DEPLOYMENT_CREATED")
                
                @schemas.classproperty
                def TENANT_ENDPOINT_SERVICE_CREATED(cls):
                    return cls("TENANT_ENDPOINT_SERVICE_CREATED")
                
                @schemas.classproperty
                def TENANT_ENDPOINT_SERVICE_AVAILABLE(cls):
                    return cls("TENANT_ENDPOINT_SERVICE_AVAILABLE")
                
                @schemas.classproperty
                def TENANT_ENDPOINT_SERVICE_DEPLOYMENT_DELETE_REQUESTED(cls):
                    return cls("TENANT_ENDPOINT_SERVICE_DEPLOYMENT_DELETE_REQUESTED")
                
                @schemas.classproperty
                def TENANT_ENDPOINT_SERVICE_DELETED(cls):
                    return cls("TENANT_ENDPOINT_SERVICE_DELETED")
                
                @schemas.classproperty
                def TENANT_ENDPOINT_SERVICE_DEPLOYMENT_DELETED(cls):
                    return cls("TENANT_ENDPOINT_SERVICE_DEPLOYMENT_DELETED")
                
                @schemas.classproperty
                def TENANT_ENDPOINT_SERVICE_DEPLOYMENT_NUM_DESIRED_ENDPOINT_SERVICES_INCREASED(cls):
                    return cls("TENANT_ENDPOINT_SERVICE_DEPLOYMENT_NUM_DESIRED_ENDPOINT_SERVICES_INCREASED")
                
                @schemas.classproperty
                def NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_RESOLVED(cls):
                    return cls("NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_RESOLVED")
                
                @schemas.classproperty
                def NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK(cls):
                    return cls("NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK")
                
                @schemas.classproperty
                def NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_RESOLVED(cls):
                    return cls("NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_RESOLVED")
                
                @schemas.classproperty
                def NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_CHECK(cls):
                    return cls("NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_CHECK")
                
                @schemas.classproperty
                def NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_RESOLVED(cls):
                    return cls("NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_RESOLVED")
                
                @schemas.classproperty
                def NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK(cls):
                    return cls("NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK")
                
                @schemas.classproperty
                def ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_CHECK(cls):
                    return cls("ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_CHECK")
                
                @schemas.classproperty
                def ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_RESOLVED(cls):
                    return cls("ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_RESOLVED")
                
                @schemas.classproperty
                def ONLINE_ARCHIVE_UP_TO_DATE(cls):
                    return cls("ONLINE_ARCHIVE_UP_TO_DATE")
                
                @schemas.classproperty
                def ONLINE_ARCHIVE_DATA_EXPIRATION_RESOLVED(cls):
                    return cls("ONLINE_ARCHIVE_DATA_EXPIRATION_RESOLVED")
                
                @schemas.classproperty
                def ONLINE_ARCHIVE_MAX_CONSECUTIVE_OFFLOAD_WINDOWS_CHECK(cls):
                    return cls("ONLINE_ARCHIVE_MAX_CONSECUTIVE_OFFLOAD_WINDOWS_CHECK")
                
                @schemas.classproperty
                def ENDPOINT_SERVICE_CREATED(cls):
                    return cls("ENDPOINT_SERVICE_CREATED")
                
                @schemas.classproperty
                def ENDPOINT_SERVICE_DELETED(cls):
                    return cls("ENDPOINT_SERVICE_DELETED")
                
                @schemas.classproperty
                def INTERFACE_ENDPOINT_CREATED(cls):
                    return cls("INTERFACE_ENDPOINT_CREATED")
                
                @schemas.classproperty
                def INTERFACE_ENDPOINT_DELETED(cls):
                    return cls("INTERFACE_ENDPOINT_DELETED")
                
                @schemas.classproperty
                def INTERFACE_ENDPOINT_PATCHED(cls):
                    return cls("INTERFACE_ENDPOINT_PATCHED")
                
                @schemas.classproperty
                def SERVERLESS_DEPLOYMENT_CREATED(cls):
                    return cls("SERVERLESS_DEPLOYMENT_CREATED")
                
                @schemas.classproperty
                def SERVERLESS_DEPLOYMENT_DELETED(cls):
                    return cls("SERVERLESS_DEPLOYMENT_DELETED")
                
                @schemas.classproperty
                def SERVERLESS_DEPLOYMENT_UPDATED(cls):
                    return cls("SERVERLESS_DEPLOYMENT_UPDATED")
                
                @schemas.classproperty
                def SERVERLESS_DEPLOYMENT_INSTANCE_REPLACED(cls):
                    return cls("SERVERLESS_DEPLOYMENT_INSTANCE_REPLACED")
                
                @schemas.classproperty
                def SERVERLESS_DEPLOYMENT_INSTANCE_REBOOTED(cls):
                    return cls("SERVERLESS_DEPLOYMENT_INSTANCE_REBOOTED")
                
                @schemas.classproperty
                def SERVERLESS_DEPLOYMENT_ENDPOINT_SERVICE_LINKED(cls):
                    return cls("SERVERLESS_DEPLOYMENT_ENDPOINT_SERVICE_LINKED")
                
                @schemas.classproperty
                def SERVERLESS_DEPLOYMENT_ENDPOINT_SERVICE_UNLINKED(cls):
                    return cls("SERVERLESS_DEPLOYMENT_ENDPOINT_SERVICE_UNLINKED")
                
                @schemas.classproperty
                def INSIDE_SERVERLESS_METRIC_THRESHOLD(cls):
                    return cls("INSIDE_SERVERLESS_METRIC_THRESHOLD")
                
                @schemas.classproperty
                def OUTSIDE_SERVERLESS_METRIC_THRESHOLD(cls):
                    return cls("OUTSIDE_SERVERLESS_METRIC_THRESHOLD")
                
                @schemas.classproperty
                def SETUP_SERVERLESS_INITIATED(cls):
                    return cls("SETUP_SERVERLESS_INITIATED")
                
                @schemas.classproperty
                def CASE_CREATED(cls):
                    return cls("CASE_CREATED")
                
                @schemas.classproperty
                def SUPPORT_EMAILS_SENT_SUCCESSFULLY(cls):
                    return cls("SUPPORT_EMAILS_SENT_SUCCESSFULLY")
                
                @schemas.classproperty
                def SUPPORT_EMAILS_SENT_FAILURE(cls):
                    return cls("SUPPORT_EMAILS_SENT_FAILURE")
                
                @schemas.classproperty
                def TENANT_SNAPSHOT_STARTED_AUDIT(cls):
                    return cls("TENANT_SNAPSHOT_STARTED_AUDIT")
                
                @schemas.classproperty
                def TENANT_SNAPSHOT_COMPLETED_AUDIT(cls):
                    return cls("TENANT_SNAPSHOT_COMPLETED_AUDIT")
                
                @schemas.classproperty
                def TENANT_SNAPSHOT_DELETED_AUDIT(cls):
                    return cls("TENANT_SNAPSHOT_DELETED_AUDIT")
                
                @schemas.classproperty
                def TENANT_RESTORE_REQUESTED_AUDIT(cls):
                    return cls("TENANT_RESTORE_REQUESTED_AUDIT")
                
                @schemas.classproperty
                def TENANT_RESTORE_COMPLETED_AUDIT(cls):
                    return cls("TENANT_RESTORE_COMPLETED_AUDIT")
                
                @schemas.classproperty
                def TENANT_SNAPSHOT_DOWNLOAD_REQUESTED_AUDIT(cls):
                    return cls("TENANT_SNAPSHOT_DOWNLOAD_REQUESTED_AUDIT")
                
                @schemas.classproperty
                def CLUSTER_VERSION_FIXED(cls):
                    return cls("CLUSTER_VERSION_FIXED")
                
                @schemas.classproperty
                def CLUSTER_VERSION_UNFIXED(cls):
                    return cls("CLUSTER_VERSION_UNFIXED")
                
                @schemas.classproperty
                def CLUSTER_FCV_FIXED(cls):
                    return cls("CLUSTER_FCV_FIXED")
                
                @schemas.classproperty
                def CLUSTER_FCV_UNFIXED(cls):
                    return cls("CLUSTER_FCV_UNFIXED")
                
                @schemas.classproperty
                def AGENT_VERSION_FIXED(cls):
                    return cls("AGENT_VERSION_FIXED")
                
                @schemas.classproperty
                def AGENT_VERSION_UNFIXED(cls):
                    return cls("AGENT_VERSION_UNFIXED")
            
            
            class id(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 24
                    min_length = 24
                    regex=[{
                        'pattern': r'^([a-f0-9]{24})$',  # noqa: E501
                    }]
            
            
            class apiKeyId(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 24
                    min_length = 24
                    regex=[{
                        'pattern': r'^([a-f0-9]{24})$',  # noqa: E501
                    }]
            
            
            class groupId(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 24
                    min_length = 24
                    regex=[{
                        'pattern': r'^([a-f0-9]{24})$',  # noqa: E501
                    }]
            isGlobalAdmin = schemas.BoolSchema
            
            
            class links(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['Link']:
                        return Link
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['Link'], typing.List['Link']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'links':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'Link':
                    return super().__getitem__(i)
            
            
            class orgId(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 24
                    min_length = 24
                    regex=[{
                        'pattern': r'^([a-f0-9]{24})$',  # noqa: E501
                    }]
            publicKey = schemas.StrSchema
        
            @staticmethod
            def raw() -> typing.Type['Raw']:
                return Raw
            
            
            class remoteAddress(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    regex=[{
                        'pattern': r'^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}\:){7}[0-9a-f]{1,4}$',  # noqa: E501
                    }]
            
            
            class userId(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 24
                    min_length = 24
                    regex=[{
                        'pattern': r'^([a-f0-9]{24})$',  # noqa: E501
                    }]
            username = schemas.StrSchema
            __annotations__ = {
                "created": created,
                "eventTypeName": eventTypeName,
                "id": id,
                "apiKeyId": apiKeyId,
                "groupId": groupId,
                "isGlobalAdmin": isGlobalAdmin,
                "links": links,
                "orgId": orgId,
                "publicKey": publicKey,
                "raw": raw,
                "remoteAddress": remoteAddress,
                "userId": userId,
                "username": username,
            }
    
    created: MetaOapg.properties.created
    eventTypeName: MetaOapg.properties.eventTypeName
    id: MetaOapg.properties.id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created"]) -> MetaOapg.properties.created: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eventTypeName"]) -> MetaOapg.properties.eventTypeName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["apiKeyId"]) -> MetaOapg.properties.apiKeyId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["groupId"]) -> MetaOapg.properties.groupId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isGlobalAdmin"]) -> MetaOapg.properties.isGlobalAdmin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["links"]) -> MetaOapg.properties.links: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["orgId"]) -> MetaOapg.properties.orgId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["publicKey"]) -> MetaOapg.properties.publicKey: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["raw"]) -> 'Raw': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["remoteAddress"]) -> MetaOapg.properties.remoteAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userId"]) -> MetaOapg.properties.userId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["username"]) -> MetaOapg.properties.username: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["created", "eventTypeName", "id", "apiKeyId", "groupId", "isGlobalAdmin", "links", "orgId", "publicKey", "raw", "remoteAddress", "userId", "username", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created"]) -> MetaOapg.properties.created: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eventTypeName"]) -> MetaOapg.properties.eventTypeName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["apiKeyId"]) -> typing.Union[MetaOapg.properties.apiKeyId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["groupId"]) -> typing.Union[MetaOapg.properties.groupId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isGlobalAdmin"]) -> typing.Union[MetaOapg.properties.isGlobalAdmin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["links"]) -> typing.Union[MetaOapg.properties.links, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["orgId"]) -> typing.Union[MetaOapg.properties.orgId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["publicKey"]) -> typing.Union[MetaOapg.properties.publicKey, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["raw"]) -> typing.Union['Raw', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["remoteAddress"]) -> typing.Union[MetaOapg.properties.remoteAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userId"]) -> typing.Union[MetaOapg.properties.userId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["username"]) -> typing.Union[MetaOapg.properties.username, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["created", "eventTypeName", "id", "apiKeyId", "groupId", "isGlobalAdmin", "links", "orgId", "publicKey", "raw", "remoteAddress", "userId", "username", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        created: typing.Union[MetaOapg.properties.created, str, datetime, ],
        eventTypeName: typing.Union[MetaOapg.properties.eventTypeName, str, ],
        id: typing.Union[MetaOapg.properties.id, str, ],
        apiKeyId: typing.Union[MetaOapg.properties.apiKeyId, str, schemas.Unset] = schemas.unset,
        groupId: typing.Union[MetaOapg.properties.groupId, str, schemas.Unset] = schemas.unset,
        isGlobalAdmin: typing.Union[MetaOapg.properties.isGlobalAdmin, bool, schemas.Unset] = schemas.unset,
        links: typing.Union[MetaOapg.properties.links, list, tuple, schemas.Unset] = schemas.unset,
        orgId: typing.Union[MetaOapg.properties.orgId, str, schemas.Unset] = schemas.unset,
        publicKey: typing.Union[MetaOapg.properties.publicKey, str, schemas.Unset] = schemas.unset,
        raw: typing.Union['Raw', schemas.Unset] = schemas.unset,
        remoteAddress: typing.Union[MetaOapg.properties.remoteAddress, str, schemas.Unset] = schemas.unset,
        userId: typing.Union[MetaOapg.properties.userId, str, schemas.Unset] = schemas.unset,
        username: typing.Union[MetaOapg.properties.username, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DefaultEventViewForNdsGroup':
        return super().__new__(
            cls,
            *_args,
            created=created,
            eventTypeName=eventTypeName,
            id=id,
            apiKeyId=apiKeyId,
            groupId=groupId,
            isGlobalAdmin=isGlobalAdmin,
            links=links,
            orgId=orgId,
            publicKey=publicKey,
            raw=raw,
            remoteAddress=remoteAddress,
            userId=userId,
            username=username,
            _configuration=_configuration,
            **kwargs,
        )

from atlas.model.link import Link
from atlas.model.raw import Raw
