# coding: utf-8

"""
    MongoDB Atlas Administration API

    The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlas import schemas  # noqa: F401


class ApiLineItemView(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    One service included in this invoice.
    """


    class MetaOapg:
        
        class properties:
            
            
            class clusterName(
                schemas.StrSchema
            ):
                pass
            created = schemas.DateTimeSchema
            discountCents = schemas.Int64Schema
            endDate = schemas.DateTimeSchema
            
            
            class groupId(
                schemas.StrSchema
            ):
                pass
            groupName = schemas.StrSchema
            note = schemas.StrSchema
            percentDiscount = schemas.Float32Schema
            quantity = schemas.Float64Schema
            
            
            class sku(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def CLASSIC_BACKUP_OPLOG(cls):
                    return cls("CLASSIC_BACKUP_OPLOG")
                
                @schemas.classproperty
                def CLASSIC_BACKUP_STORAGE(cls):
                    return cls("CLASSIC_BACKUP_STORAGE")
                
                @schemas.classproperty
                def CLASSIC_BACKUP_SNAPSHOT_CREATE(cls):
                    return cls("CLASSIC_BACKUP_SNAPSHOT_CREATE")
                
                @schemas.classproperty
                def CLASSIC_BACKUP_DAILY_MINIMUM(cls):
                    return cls("CLASSIC_BACKUP_DAILY_MINIMUM")
                
                @schemas.classproperty
                def CLASSIC_BACKUP_FREE_TIER(cls):
                    return cls("CLASSIC_BACKUP_FREE_TIER")
                
                @schemas.classproperty
                def CLASSIC_COUPON(cls):
                    return cls("CLASSIC_COUPON")
                
                @schemas.classproperty
                def BACKUP_STORAGE_FREE_TIER(cls):
                    return cls("BACKUP_STORAGE_FREE_TIER")
                
                @schemas.classproperty
                def BACKUP_STORAGE(cls):
                    return cls("BACKUP_STORAGE")
                
                @schemas.classproperty
                def FLEX_CONSULTING(cls):
                    return cls("FLEX_CONSULTING")
                
                @schemas.classproperty
                def CLOUD_MANAGER_CLASSIC(cls):
                    return cls("CLOUD_MANAGER_CLASSIC")
                
                @schemas.classproperty
                def CLOUD_MANAGER_BASIC_FREE_TIER(cls):
                    return cls("CLOUD_MANAGER_BASIC_FREE_TIER")
                
                @schemas.classproperty
                def CLOUD_MANAGER_BASIC(cls):
                    return cls("CLOUD_MANAGER_BASIC")
                
                @schemas.classproperty
                def CLOUD_MANAGER_PREMIUM(cls):
                    return cls("CLOUD_MANAGER_PREMIUM")
                
                @schemas.classproperty
                def CLOUD_MANAGER_FREE_TIER(cls):
                    return cls("CLOUD_MANAGER_FREE_TIER")
                
                @schemas.classproperty
                def CLOUD_MANAGER_STANDARD_FREE_TIER(cls):
                    return cls("CLOUD_MANAGER_STANDARD_FREE_TIER")
                
                @schemas.classproperty
                def CLOUD_MANAGER_STANDARD_ANNUAL(cls):
                    return cls("CLOUD_MANAGER_STANDARD_ANNUAL")
                
                @schemas.classproperty
                def CLOUD_MANAGER_STANDARD(cls):
                    return cls("CLOUD_MANAGER_STANDARD")
                
                @schemas.classproperty
                def CLOUD_MANAGER_FREE_TRIAL(cls):
                    return cls("CLOUD_MANAGER_FREE_TRIAL")
                
                @schemas.classproperty
                def ATLAS_INSTANCE_M0(cls):
                    return cls("ATLAS_INSTANCE_M0")
                
                @schemas.classproperty
                def ATLAS_INSTANCE_M2(cls):
                    return cls("ATLAS_INSTANCE_M2")
                
                @schemas.classproperty
                def ATLAS_INSTANCE_M5(cls):
                    return cls("ATLAS_INSTANCE_M5")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M10(cls):
                    return cls("ATLAS_AWS_INSTANCE_M10")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M20(cls):
                    return cls("ATLAS_AWS_INSTANCE_M20")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M30(cls):
                    return cls("ATLAS_AWS_INSTANCE_M30")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M40(cls):
                    return cls("ATLAS_AWS_INSTANCE_M40")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M50(cls):
                    return cls("ATLAS_AWS_INSTANCE_M50")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M60(cls):
                    return cls("ATLAS_AWS_INSTANCE_M60")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M80(cls):
                    return cls("ATLAS_AWS_INSTANCE_M80")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M100(cls):
                    return cls("ATLAS_AWS_INSTANCE_M100")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M140(cls):
                    return cls("ATLAS_AWS_INSTANCE_M140")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M200(cls):
                    return cls("ATLAS_AWS_INSTANCE_M200")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M300(cls):
                    return cls("ATLAS_AWS_INSTANCE_M300")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M40_LOW_CPU(cls):
                    return cls("ATLAS_AWS_INSTANCE_M40_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M50_LOW_CPU(cls):
                    return cls("ATLAS_AWS_INSTANCE_M50_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M60_LOW_CPU(cls):
                    return cls("ATLAS_AWS_INSTANCE_M60_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M80_LOW_CPU(cls):
                    return cls("ATLAS_AWS_INSTANCE_M80_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M200_LOW_CPU(cls):
                    return cls("ATLAS_AWS_INSTANCE_M200_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M300_LOW_CPU(cls):
                    return cls("ATLAS_AWS_INSTANCE_M300_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M400_LOW_CPU(cls):
                    return cls("ATLAS_AWS_INSTANCE_M400_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M700_LOW_CPU(cls):
                    return cls("ATLAS_AWS_INSTANCE_M700_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M40_NVME(cls):
                    return cls("ATLAS_AWS_INSTANCE_M40_NVME")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M50_NVME(cls):
                    return cls("ATLAS_AWS_INSTANCE_M50_NVME")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M60_NVME(cls):
                    return cls("ATLAS_AWS_INSTANCE_M60_NVME")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M80_NVME(cls):
                    return cls("ATLAS_AWS_INSTANCE_M80_NVME")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M200_NVME(cls):
                    return cls("ATLAS_AWS_INSTANCE_M200_NVME")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M400_NVME(cls):
                    return cls("ATLAS_AWS_INSTANCE_M400_NVME")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M10_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M10_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M20_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M20_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M30_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M30_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M40_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M40_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M50_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M50_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M60_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M60_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M80_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M80_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M100_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M100_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M140_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M140_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M200_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M200_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M300_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M300_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M40_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M40_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M50_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M50_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M60_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M60_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M80_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M80_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M200_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M200_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M300_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M300_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M400_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M400_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_INSTANCE_M700_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_AWS_INSTANCE_M700_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AWS_STORAGE_PROVISIONED(cls):
                    return cls("ATLAS_AWS_STORAGE_PROVISIONED")
                
                @schemas.classproperty
                def ATLAS_AWS_STORAGE_STANDARD(cls):
                    return cls("ATLAS_AWS_STORAGE_STANDARD")
                
                @schemas.classproperty
                def ATLAS_AWS_STORAGE_STANDARD_GP3(cls):
                    return cls("ATLAS_AWS_STORAGE_STANDARD_GP3")
                
                @schemas.classproperty
                def ATLAS_AWS_STORAGE_IOPS(cls):
                    return cls("ATLAS_AWS_STORAGE_IOPS")
                
                @schemas.classproperty
                def ATLAS_AWS_DATA_TRANSFER_SAME_REGION(cls):
                    return cls("ATLAS_AWS_DATA_TRANSFER_SAME_REGION")
                
                @schemas.classproperty
                def ATLAS_AWS_DATA_TRANSFER_DIFFERENT_REGION(cls):
                    return cls("ATLAS_AWS_DATA_TRANSFER_DIFFERENT_REGION")
                
                @schemas.classproperty
                def ATLAS_AWS_DATA_TRANSFER_INTERNET(cls):
                    return cls("ATLAS_AWS_DATA_TRANSFER_INTERNET")
                
                @schemas.classproperty
                def ATLAS_AWS_BACKUP_SNAPSHOT_STORAGE(cls):
                    return cls("ATLAS_AWS_BACKUP_SNAPSHOT_STORAGE")
                
                @schemas.classproperty
                def ATLAS_AWS_BACKUP_DOWNLOAD_VM(cls):
                    return cls("ATLAS_AWS_BACKUP_DOWNLOAD_VM")
                
                @schemas.classproperty
                def ATLAS_AWS_BACKUP_DOWNLOAD_VM_STORAGE(cls):
                    return cls("ATLAS_AWS_BACKUP_DOWNLOAD_VM_STORAGE")
                
                @schemas.classproperty
                def ATLAS_AWS_BACKUP_DOWNLOAD_VM_STORAGE_IOPS(cls):
                    return cls("ATLAS_AWS_BACKUP_DOWNLOAD_VM_STORAGE_IOPS")
                
                @schemas.classproperty
                def ATLAS_AWS_PRIVATE_ENDPOINT(cls):
                    return cls("ATLAS_AWS_PRIVATE_ENDPOINT")
                
                @schemas.classproperty
                def ATLAS_AWS_PRIVATE_ENDPOINT_CAPACITY_UNITS(cls):
                    return cls("ATLAS_AWS_PRIVATE_ENDPOINT_CAPACITY_UNITS")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M10(cls):
                    return cls("ATLAS_GCP_INSTANCE_M10")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M20(cls):
                    return cls("ATLAS_GCP_INSTANCE_M20")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M30(cls):
                    return cls("ATLAS_GCP_INSTANCE_M30")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M40(cls):
                    return cls("ATLAS_GCP_INSTANCE_M40")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M50(cls):
                    return cls("ATLAS_GCP_INSTANCE_M50")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M60(cls):
                    return cls("ATLAS_GCP_INSTANCE_M60")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M80(cls):
                    return cls("ATLAS_GCP_INSTANCE_M80")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M140(cls):
                    return cls("ATLAS_GCP_INSTANCE_M140")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M200(cls):
                    return cls("ATLAS_GCP_INSTANCE_M200")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M250(cls):
                    return cls("ATLAS_GCP_INSTANCE_M250")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M300(cls):
                    return cls("ATLAS_GCP_INSTANCE_M300")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M400(cls):
                    return cls("ATLAS_GCP_INSTANCE_M400")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M40_LOW_CPU(cls):
                    return cls("ATLAS_GCP_INSTANCE_M40_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M50_LOW_CPU(cls):
                    return cls("ATLAS_GCP_INSTANCE_M50_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M60_LOW_CPU(cls):
                    return cls("ATLAS_GCP_INSTANCE_M60_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M80_LOW_CPU(cls):
                    return cls("ATLAS_GCP_INSTANCE_M80_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M200_LOW_CPU(cls):
                    return cls("ATLAS_GCP_INSTANCE_M200_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M300_LOW_CPU(cls):
                    return cls("ATLAS_GCP_INSTANCE_M300_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M400_LOW_CPU(cls):
                    return cls("ATLAS_GCP_INSTANCE_M400_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M600_LOW_CPU(cls):
                    return cls("ATLAS_GCP_INSTANCE_M600_LOW_CPU")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M10_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M10_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M20_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M20_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M30_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M30_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M40_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M40_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M50_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M50_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M60_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M60_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M80_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M80_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M140_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M140_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M200_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M200_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M250_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M250_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M300_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M300_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M400_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M400_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M40_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M40_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M50_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M50_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M60_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M60_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M80_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M80_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M200_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M200_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M300_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M300_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M400_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M400_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_INSTANCE_M600_LOW_CPU_PAUSED(cls):
                    return cls("ATLAS_GCP_INSTANCE_M600_LOW_CPU_PAUSED")
                
                @schemas.classproperty
                def ATLAS_GCP_STORAGE_SSD(cls):
                    return cls("ATLAS_GCP_STORAGE_SSD")
                
                @schemas.classproperty
                def ATLAS_GCP_DATA_TRANSFER_INTERNET(cls):
                    return cls("ATLAS_GCP_DATA_TRANSFER_INTERNET")
                
                @schemas.classproperty
                def ATLAS_GCP_DATA_TRANSFER_INTER_CONNECT(cls):
                    return cls("ATLAS_GCP_DATA_TRANSFER_INTER_CONNECT")
                
                @schemas.classproperty
                def ATLAS_GCP_DATA_TRANSFER_INTER_ZONE(cls):
                    return cls("ATLAS_GCP_DATA_TRANSFER_INTER_ZONE")
                
                @schemas.classproperty
                def ATLAS_GCP_DATA_TRANSFER_INTER_REGION(cls):
                    return cls("ATLAS_GCP_DATA_TRANSFER_INTER_REGION")
                
                @schemas.classproperty
                def ATLAS_GCP_DATA_TRANSFER_GOOGLE(cls):
                    return cls("ATLAS_GCP_DATA_TRANSFER_GOOGLE")
                
                @schemas.classproperty
                def ATLAS_GCP_BACKUP_SNAPSHOT_STORAGE(cls):
                    return cls("ATLAS_GCP_BACKUP_SNAPSHOT_STORAGE")
                
                @schemas.classproperty
                def ATLAS_GCP_BACKUP_DOWNLOAD_VM(cls):
                    return cls("ATLAS_GCP_BACKUP_DOWNLOAD_VM")
                
                @schemas.classproperty
                def ATLAS_GCP_BACKUP_DOWNLOAD_VM_STORAGE(cls):
                    return cls("ATLAS_GCP_BACKUP_DOWNLOAD_VM_STORAGE")
                
                @schemas.classproperty
                def ATLAS_GCP_PRIVATE_ENDPOINT(cls):
                    return cls("ATLAS_GCP_PRIVATE_ENDPOINT")
                
                @schemas.classproperty
                def ATLAS_GCP_PRIVATE_ENDPOINT_CAPACITY_UNITS(cls):
                    return cls("ATLAS_GCP_PRIVATE_ENDPOINT_CAPACITY_UNITS")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M10(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M10")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M20(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M20")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M30(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M30")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M40(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M40")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M50(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M50")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M60(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M60")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M80(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M80")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M90(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M90")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M200(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M200")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R40(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R40")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R50(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R50")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R60(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R60")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R80(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R80")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R200(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R200")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R300(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R300")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R400(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R400")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M60_NVME(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M60_NVME")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M80_NVME(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M80_NVME")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M200_NVME(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M200_NVME")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M300_NVME(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M300_NVME")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M400_NVME(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M400_NVME")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M600_NVME(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M600_NVME")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M10_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M10_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M20_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M20_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M30_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M30_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M40_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M40_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M50_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M50_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M60_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M60_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M80_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M80_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M90_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M90_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_M200_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_M200_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R40_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R40_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R50_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R50_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R60_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R60_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R80_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R80_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R200_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R200_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R300_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R300_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_INSTANCE_R400_PAUSED(cls):
                    return cls("ATLAS_AZURE_INSTANCE_R400_PAUSED")
                
                @schemas.classproperty
                def ATLAS_AZURE_STORAGE_P2(cls):
                    return cls("ATLAS_AZURE_STORAGE_P2")
                
                @schemas.classproperty
                def ATLAS_AZURE_STORAGE_P3(cls):
                    return cls("ATLAS_AZURE_STORAGE_P3")
                
                @schemas.classproperty
                def ATLAS_AZURE_STORAGE_P4(cls):
                    return cls("ATLAS_AZURE_STORAGE_P4")
                
                @schemas.classproperty
                def ATLAS_AZURE_STORAGE_P6(cls):
                    return cls("ATLAS_AZURE_STORAGE_P6")
                
                @schemas.classproperty
                def ATLAS_AZURE_STORAGE_P10(cls):
                    return cls("ATLAS_AZURE_STORAGE_P10")
                
                @schemas.classproperty
                def ATLAS_AZURE_STORAGE_P15(cls):
                    return cls("ATLAS_AZURE_STORAGE_P15")
                
                @schemas.classproperty
                def ATLAS_AZURE_STORAGE_P20(cls):
                    return cls("ATLAS_AZURE_STORAGE_P20")
                
                @schemas.classproperty
                def ATLAS_AZURE_STORAGE_P30(cls):
                    return cls("ATLAS_AZURE_STORAGE_P30")
                
                @schemas.classproperty
                def ATLAS_AZURE_STORAGE_P40(cls):
                    return cls("ATLAS_AZURE_STORAGE_P40")
                
                @schemas.classproperty
                def ATLAS_AZURE_STORAGE_P50(cls):
                    return cls("ATLAS_AZURE_STORAGE_P50")
                
                @schemas.classproperty
                def ATLAS_AZURE_DATA_TRANSFER(cls):
                    return cls("ATLAS_AZURE_DATA_TRANSFER")
                
                @schemas.classproperty
                def ATLAS_AZURE_DATA_TRANSFER_REGIONAL_VNET_IN(cls):
                    return cls("ATLAS_AZURE_DATA_TRANSFER_REGIONAL_VNET_IN")
                
                @schemas.classproperty
                def ATLAS_AZURE_DATA_TRANSFER_REGIONAL_VNET_OUT(cls):
                    return cls("ATLAS_AZURE_DATA_TRANSFER_REGIONAL_VNET_OUT")
                
                @schemas.classproperty
                def ATLAS_AZURE_DATA_TRANSFER_GLOBAL_VNET_IN(cls):
                    return cls("ATLAS_AZURE_DATA_TRANSFER_GLOBAL_VNET_IN")
                
                @schemas.classproperty
                def ATLAS_AZURE_DATA_TRANSFER_GLOBAL_VNET_OUT(cls):
                    return cls("ATLAS_AZURE_DATA_TRANSFER_GLOBAL_VNET_OUT")
                
                @schemas.classproperty
                def ATLAS_AZURE_DATA_TRANSFER_AVAILABILITY_ZONE_IN(cls):
                    return cls("ATLAS_AZURE_DATA_TRANSFER_AVAILABILITY_ZONE_IN")
                
                @schemas.classproperty
                def ATLAS_AZURE_DATA_TRANSFER_AVAILABILITY_ZONE_OUT(cls):
                    return cls("ATLAS_AZURE_DATA_TRANSFER_AVAILABILITY_ZONE_OUT")
                
                @schemas.classproperty
                def ATLAS_AZURE_BACKUP_SNAPSHOT_STORAGE(cls):
                    return cls("ATLAS_AZURE_BACKUP_SNAPSHOT_STORAGE")
                
                @schemas.classproperty
                def ATLAS_AZURE_BACKUP_DOWNLOAD_VM(cls):
                    return cls("ATLAS_AZURE_BACKUP_DOWNLOAD_VM")
                
                @schemas.classproperty
                def ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P2(cls):
                    return cls("ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P2")
                
                @schemas.classproperty
                def ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P3(cls):
                    return cls("ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P3")
                
                @schemas.classproperty
                def ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P4(cls):
                    return cls("ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P4")
                
                @schemas.classproperty
                def ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P6(cls):
                    return cls("ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P6")
                
                @schemas.classproperty
                def ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P10(cls):
                    return cls("ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P10")
                
                @schemas.classproperty
                def ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P15(cls):
                    return cls("ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P15")
                
                @schemas.classproperty
                def ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P20(cls):
                    return cls("ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P20")
                
                @schemas.classproperty
                def ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P30(cls):
                    return cls("ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P30")
                
                @schemas.classproperty
                def ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P40(cls):
                    return cls("ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P40")
                
                @schemas.classproperty
                def ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P50(cls):
                    return cls("ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P50")
                
                @schemas.classproperty
                def ATLAS_BI_CONNECTOR(cls):
                    return cls("ATLAS_BI_CONNECTOR")
                
                @schemas.classproperty
                def ATLAS_ADVANCED_SECURITY(cls):
                    return cls("ATLAS_ADVANCED_SECURITY")
                
                @schemas.classproperty
                def ATLAS_ENTERPRISE_AUDITING(cls):
                    return cls("ATLAS_ENTERPRISE_AUDITING")
                
                @schemas.classproperty
                def ATLAS_FREE_SUPPORT(cls):
                    return cls("ATLAS_FREE_SUPPORT")
                
                @schemas.classproperty
                def ATLAS_SUPPORT(cls):
                    return cls("ATLAS_SUPPORT")
                
                @schemas.classproperty
                def STITCH_DATA_DOWNLOADED_FREE_TIER(cls):
                    return cls("STITCH_DATA_DOWNLOADED_FREE_TIER")
                
                @schemas.classproperty
                def STITCH_DATA_DOWNLOADED(cls):
                    return cls("STITCH_DATA_DOWNLOADED")
                
                @schemas.classproperty
                def STITCH_COMPUTE_FREE_TIER(cls):
                    return cls("STITCH_COMPUTE_FREE_TIER")
                
                @schemas.classproperty
                def STITCH_COMPUTE(cls):
                    return cls("STITCH_COMPUTE")
                
                @schemas.classproperty
                def CREDIT(cls):
                    return cls("CREDIT")
                
                @schemas.classproperty
                def MINIMUM_CHARGE(cls):
                    return cls("MINIMUM_CHARGE")
                
                @schemas.classproperty
                def CHARTS_DATA_DOWNLOADED_FREE_TIER(cls):
                    return cls("CHARTS_DATA_DOWNLOADED_FREE_TIER")
                
                @schemas.classproperty
                def CHARTS_DATA_DOWNLOADED(cls):
                    return cls("CHARTS_DATA_DOWNLOADED")
                
                @schemas.classproperty
                def ATLAS_DATA_LAKE_AWS_DATA_RETURNED_SAME_REGION(cls):
                    return cls("ATLAS_DATA_LAKE_AWS_DATA_RETURNED_SAME_REGION")
                
                @schemas.classproperty
                def ATLAS_DATA_LAKE_AWS_DATA_RETURNED_DIFFERENT_REGION(cls):
                    return cls("ATLAS_DATA_LAKE_AWS_DATA_RETURNED_DIFFERENT_REGION")
                
                @schemas.classproperty
                def ATLAS_DATA_LAKE_AWS_DATA_RETURNED_INTERNET(cls):
                    return cls("ATLAS_DATA_LAKE_AWS_DATA_RETURNED_INTERNET")
                
                @schemas.classproperty
                def ATLAS_DATA_LAKE_AWS_DATA_SCANNED(cls):
                    return cls("ATLAS_DATA_LAKE_AWS_DATA_SCANNED")
                
                @schemas.classproperty
                def ATLAS_DATA_LAKE_AWS_DATA_TRANSFERRED_FROM_DIFFERENT_REGION(cls):
                    return cls("ATLAS_DATA_LAKE_AWS_DATA_TRANSFERRED_FROM_DIFFERENT_REGION")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_DATA_LAKE_STORAGE_ACCESS(cls):
                    return cls("ATLAS_NDS_AWS_DATA_LAKE_STORAGE_ACCESS")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_DATA_LAKE_STORAGE(cls):
                    return cls("ATLAS_NDS_AWS_DATA_LAKE_STORAGE")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_OBJECT_STORAGE_ACCESS(cls):
                    return cls("ATLAS_NDS_AWS_OBJECT_STORAGE_ACCESS")
                
                @schemas.classproperty
                def ATLAS_ARCHIVE_ACCESS_PARTITION_LOCATE(cls):
                    return cls("ATLAS_ARCHIVE_ACCESS_PARTITION_LOCATE")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_PIT_RESTORE_STORAGE_FREE_TIER(cls):
                    return cls("ATLAS_NDS_AWS_PIT_RESTORE_STORAGE_FREE_TIER")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_PIT_RESTORE_STORAGE(cls):
                    return cls("ATLAS_NDS_AWS_PIT_RESTORE_STORAGE")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_PIT_RESTORE_STORAGE_FREE_TIER(cls):
                    return cls("ATLAS_NDS_GCP_PIT_RESTORE_STORAGE_FREE_TIER")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_PIT_RESTORE_STORAGE(cls):
                    return cls("ATLAS_NDS_GCP_PIT_RESTORE_STORAGE")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_PIT_RESTORE_STORAGE_FREE_TIER(cls):
                    return cls("ATLAS_NDS_AZURE_PIT_RESTORE_STORAGE_FREE_TIER")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_PIT_RESTORE_STORAGE(cls):
                    return cls("ATLAS_NDS_AZURE_PIT_RESTORE_STORAGE")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_PRIVATE_ENDPOINT_CAPACITY_UNITS(cls):
                    return cls("ATLAS_NDS_AZURE_PRIVATE_ENDPOINT_CAPACITY_UNITS")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_OBJECT_STORAGE(cls):
                    return cls("ATLAS_NDS_AWS_OBJECT_STORAGE")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SNAPSHOT_EXPORT_UPLOAD(cls):
                    return cls("ATLAS_NDS_AWS_SNAPSHOT_EXPORT_UPLOAD")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_M40(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_M40")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_M50(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_M50")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_M60(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_M60")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P2(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P2")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P3(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P3")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P4(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P4")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P6(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P6")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P10(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P10")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P15(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P15")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P20(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P20")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P30(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P30")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P40(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P40")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P50(cls):
                    return cls("ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P50")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM(cls):
                    return cls("ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_M40(cls):
                    return cls("ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_M40")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_M50(cls):
                    return cls("ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_M50")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_M60(cls):
                    return cls("ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_M60")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_STORAGE(cls):
                    return cls("ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_STORAGE")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_STORAGE_IOPS(cls):
                    return cls("ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_STORAGE_IOPS")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM(cls):
                    return cls("ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_M40(cls):
                    return cls("ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_M40")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_M50(cls):
                    return cls("ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_M50")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_M60(cls):
                    return cls("ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_M60")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_STORAGE(cls):
                    return cls("ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_STORAGE")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SERVERLESS_RPU(cls):
                    return cls("ATLAS_NDS_AWS_SERVERLESS_RPU")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SERVERLESS_WPU(cls):
                    return cls("ATLAS_NDS_AWS_SERVERLESS_WPU")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SERVERLESS_STORAGE(cls):
                    return cls("ATLAS_NDS_AWS_SERVERLESS_STORAGE")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SERVERLESS_CONTINUOUS_BACKUP(cls):
                    return cls("ATLAS_NDS_AWS_SERVERLESS_CONTINUOUS_BACKUP")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SERVERLESS_BACKUP_RESTORE_VM(cls):
                    return cls("ATLAS_NDS_AWS_SERVERLESS_BACKUP_RESTORE_VM")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_PREVIEW(cls):
                    return cls("ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_PREVIEW")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER(cls):
                    return cls("ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_REGIONAL(cls):
                    return cls("ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_REGIONAL")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_CROSS_REGION(cls):
                    return cls("ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_CROSS_REGION")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_INTERNET(cls):
                    return cls("ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_INTERNET")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SERVERLESS_RPU(cls):
                    return cls("ATLAS_NDS_GCP_SERVERLESS_RPU")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SERVERLESS_WPU(cls):
                    return cls("ATLAS_NDS_GCP_SERVERLESS_WPU")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SERVERLESS_STORAGE(cls):
                    return cls("ATLAS_NDS_GCP_SERVERLESS_STORAGE")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SERVERLESS_CONTINUOUS_BACKUP(cls):
                    return cls("ATLAS_NDS_GCP_SERVERLESS_CONTINUOUS_BACKUP")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SERVERLESS_BACKUP_RESTORE_VM(cls):
                    return cls("ATLAS_NDS_GCP_SERVERLESS_BACKUP_RESTORE_VM")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_PREVIEW(cls):
                    return cls("ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_PREVIEW")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER(cls):
                    return cls("ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_REGIONAL(cls):
                    return cls("ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_REGIONAL")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_CROSS_REGION(cls):
                    return cls("ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_CROSS_REGION")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_INTERNET(cls):
                    return cls("ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_INTERNET")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SERVERLESS_RPU(cls):
                    return cls("ATLAS_NDS_AZURE_SERVERLESS_RPU")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SERVERLESS_WPU(cls):
                    return cls("ATLAS_NDS_AZURE_SERVERLESS_WPU")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SERVERLESS_STORAGE(cls):
                    return cls("ATLAS_NDS_AZURE_SERVERLESS_STORAGE")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SERVERLESS_CONTINUOUS_BACKUP(cls):
                    return cls("ATLAS_NDS_AZURE_SERVERLESS_CONTINUOUS_BACKUP")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SERVERLESS_BACKUP_RESTORE_VM(cls):
                    return cls("ATLAS_NDS_AZURE_SERVERLESS_BACKUP_RESTORE_VM")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_PREVIEW(cls):
                    return cls("ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_PREVIEW")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER(cls):
                    return cls("ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_REGIONAL(cls):
                    return cls("ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_REGIONAL")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_CROSS_REGION(cls):
                    return cls("ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_CROSS_REGION")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_INTERNET(cls):
                    return cls("ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_INTERNET")
                
                @schemas.classproperty
                def REALM_APP_REQUESTS_FREE_TIER(cls):
                    return cls("REALM_APP_REQUESTS_FREE_TIER")
                
                @schemas.classproperty
                def REALM_APP_REQUESTS(cls):
                    return cls("REALM_APP_REQUESTS")
                
                @schemas.classproperty
                def REALM_APP_COMPUTE_FREE_TIER(cls):
                    return cls("REALM_APP_COMPUTE_FREE_TIER")
                
                @schemas.classproperty
                def REALM_APP_COMPUTE(cls):
                    return cls("REALM_APP_COMPUTE")
                
                @schemas.classproperty
                def REALM_APP_SYNC_FREE_TIER(cls):
                    return cls("REALM_APP_SYNC_FREE_TIER")
                
                @schemas.classproperty
                def REALM_APP_SYNC(cls):
                    return cls("REALM_APP_SYNC")
                
                @schemas.classproperty
                def REALM_APP_DATA_TRANSFER_FREE_TIER(cls):
                    return cls("REALM_APP_DATA_TRANSFER_FREE_TIER")
                
                @schemas.classproperty
                def REALM_APP_DATA_TRANSFER(cls):
                    return cls("REALM_APP_DATA_TRANSFER")
                
                @schemas.classproperty
                def METERING_E2E_BILLING(cls):
                    return cls("METERING_E2E_BILLING")
                
                @schemas.classproperty
                def DATA_LAKE_AWS_DATA_SCANNED_TEST_PRICE_CHANGE(cls):
                    return cls("DATA_LAKE_AWS_DATA_SCANNED_TEST_PRICE_CHANGE")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_INSTANCE_R40_TEST_PRICE_CHANGE(cls):
                    return cls("ATLAS_NDS_AWS_INSTANCE_R40_TEST_PRICE_CHANGE")
                
                @schemas.classproperty
                def ATLAS_NDS_AZURE_INSTANCE_M30_TEST_PRICE_CHANGE(cls):
                    return cls("ATLAS_NDS_AZURE_INSTANCE_M30_TEST_PRICE_CHANGE")
                
                @schemas.classproperty
                def ATLAS_NDS_AWS_PIT_RESTORE_STORAGE_TEST_PRICE_CHANGE(cls):
                    return cls("ATLAS_NDS_AWS_PIT_RESTORE_STORAGE_TEST_PRICE_CHANGE")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_STORAGE_SSD_TEST_PRICE_CHANGE(cls):
                    return cls("ATLAS_NDS_GCP_STORAGE_SSD_TEST_PRICE_CHANGE")
                
                @schemas.classproperty
                def ATLAS_NDS_GCP_DATA_TRANSFER_INTERNET_TEST_PRICE_CHANGE(cls):
                    return cls("ATLAS_NDS_GCP_DATA_TRANSFER_INTERNET_TEST_PRICE_CHANGE")
                
                @schemas.classproperty
                def BACKUP_STORAGE_TEST_PRICE_CHANGE(cls):
                    return cls("BACKUP_STORAGE_TEST_PRICE_CHANGE")
                
                @schemas.classproperty
                def GCP_SNAPSHOT_COPY_DISK(cls):
                    return cls("GCP_SNAPSHOT_COPY_DISK")
            startDate = schemas.DateTimeSchema
            stitchAppName = schemas.StrSchema
            tierLowerBound = schemas.Float64Schema
            tierUpperBound = schemas.Float64Schema
            totalPriceCents = schemas.Int64Schema
            unit = schemas.StrSchema
            unitPriceDollars = schemas.Float64Schema
            __annotations__ = {
                "clusterName": clusterName,
                "created": created,
                "discountCents": discountCents,
                "endDate": endDate,
                "groupId": groupId,
                "groupName": groupName,
                "note": note,
                "percentDiscount": percentDiscount,
                "quantity": quantity,
                "sku": sku,
                "startDate": startDate,
                "stitchAppName": stitchAppName,
                "tierLowerBound": tierLowerBound,
                "tierUpperBound": tierUpperBound,
                "totalPriceCents": totalPriceCents,
                "unit": unit,
                "unitPriceDollars": unitPriceDollars,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["clusterName"]) -> MetaOapg.properties.clusterName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created"]) -> MetaOapg.properties.created: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["discountCents"]) -> MetaOapg.properties.discountCents: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["endDate"]) -> MetaOapg.properties.endDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["groupId"]) -> MetaOapg.properties.groupId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["groupName"]) -> MetaOapg.properties.groupName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["note"]) -> MetaOapg.properties.note: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["percentDiscount"]) -> MetaOapg.properties.percentDiscount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["quantity"]) -> MetaOapg.properties.quantity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sku"]) -> MetaOapg.properties.sku: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["startDate"]) -> MetaOapg.properties.startDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stitchAppName"]) -> MetaOapg.properties.stitchAppName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tierLowerBound"]) -> MetaOapg.properties.tierLowerBound: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tierUpperBound"]) -> MetaOapg.properties.tierUpperBound: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalPriceCents"]) -> MetaOapg.properties.totalPriceCents: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["unit"]) -> MetaOapg.properties.unit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["unitPriceDollars"]) -> MetaOapg.properties.unitPriceDollars: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["clusterName", "created", "discountCents", "endDate", "groupId", "groupName", "note", "percentDiscount", "quantity", "sku", "startDate", "stitchAppName", "tierLowerBound", "tierUpperBound", "totalPriceCents", "unit", "unitPriceDollars", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["clusterName"]) -> typing.Union[MetaOapg.properties.clusterName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created"]) -> typing.Union[MetaOapg.properties.created, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["discountCents"]) -> typing.Union[MetaOapg.properties.discountCents, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["endDate"]) -> typing.Union[MetaOapg.properties.endDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["groupId"]) -> typing.Union[MetaOapg.properties.groupId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["groupName"]) -> typing.Union[MetaOapg.properties.groupName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["note"]) -> typing.Union[MetaOapg.properties.note, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["percentDiscount"]) -> typing.Union[MetaOapg.properties.percentDiscount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["quantity"]) -> typing.Union[MetaOapg.properties.quantity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sku"]) -> typing.Union[MetaOapg.properties.sku, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["startDate"]) -> typing.Union[MetaOapg.properties.startDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stitchAppName"]) -> typing.Union[MetaOapg.properties.stitchAppName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tierLowerBound"]) -> typing.Union[MetaOapg.properties.tierLowerBound, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tierUpperBound"]) -> typing.Union[MetaOapg.properties.tierUpperBound, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalPriceCents"]) -> typing.Union[MetaOapg.properties.totalPriceCents, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["unit"]) -> typing.Union[MetaOapg.properties.unit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["unitPriceDollars"]) -> typing.Union[MetaOapg.properties.unitPriceDollars, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["clusterName", "created", "discountCents", "endDate", "groupId", "groupName", "note", "percentDiscount", "quantity", "sku", "startDate", "stitchAppName", "tierLowerBound", "tierUpperBound", "totalPriceCents", "unit", "unitPriceDollars", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        clusterName: typing.Union[MetaOapg.properties.clusterName, str, schemas.Unset] = schemas.unset,
        created: typing.Union[MetaOapg.properties.created, str, datetime, schemas.Unset] = schemas.unset,
        discountCents: typing.Union[MetaOapg.properties.discountCents, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        endDate: typing.Union[MetaOapg.properties.endDate, str, datetime, schemas.Unset] = schemas.unset,
        groupId: typing.Union[MetaOapg.properties.groupId, str, schemas.Unset] = schemas.unset,
        groupName: typing.Union[MetaOapg.properties.groupName, str, schemas.Unset] = schemas.unset,
        note: typing.Union[MetaOapg.properties.note, str, schemas.Unset] = schemas.unset,
        percentDiscount: typing.Union[MetaOapg.properties.percentDiscount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        quantity: typing.Union[MetaOapg.properties.quantity, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        sku: typing.Union[MetaOapg.properties.sku, str, schemas.Unset] = schemas.unset,
        startDate: typing.Union[MetaOapg.properties.startDate, str, datetime, schemas.Unset] = schemas.unset,
        stitchAppName: typing.Union[MetaOapg.properties.stitchAppName, str, schemas.Unset] = schemas.unset,
        tierLowerBound: typing.Union[MetaOapg.properties.tierLowerBound, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tierUpperBound: typing.Union[MetaOapg.properties.tierUpperBound, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        totalPriceCents: typing.Union[MetaOapg.properties.totalPriceCents, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        unit: typing.Union[MetaOapg.properties.unit, str, schemas.Unset] = schemas.unset,
        unitPriceDollars: typing.Union[MetaOapg.properties.unitPriceDollars, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ApiLineItemView':
        return super().__new__(
            cls,
            *_args,
            clusterName=clusterName,
            created=created,
            discountCents=discountCents,
            endDate=endDate,
            groupId=groupId,
            groupName=groupName,
            note=note,
            percentDiscount=percentDiscount,
            quantity=quantity,
            sku=sku,
            startDate=startDate,
            stitchAppName=stitchAppName,
            tierLowerBound=tierLowerBound,
            tierUpperBound=tierUpperBound,
            totalPriceCents=totalPriceCents,
            unit=unit,
            unitPriceDollars=unitPriceDollars,
            _configuration=_configuration,
            **kwargs,
        )
