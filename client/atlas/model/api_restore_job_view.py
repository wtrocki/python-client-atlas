# coding: utf-8

"""
    MongoDB Atlas Administration API

    The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlas import schemas  # noqa: F401


class ApiRestoreJobView(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "delivery",
        }
        
        class properties:
        
            @staticmethod
            def delivery() -> typing.Type['ApiRestoreJobDeliveryView']:
                return ApiRestoreJobDeliveryView
            
            
            class batchId(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 24
                    min_length = 24
                    regex=[{
                        'pattern': r'^([a-f0-9]{24})$',  # noqa: E501
                    }]
            
            
            class checkpointId(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 24
                    min_length = 24
                    regex=[{
                        'pattern': r'^([a-f0-9]{24})$',  # noqa: E501
                    }]
            
            
            class clusterId(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 24
                    min_length = 24
                    regex=[{
                        'pattern': r'^([a-f0-9]{24})$',  # noqa: E501
                    }]
            
            
            class clusterName(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 64
                    min_length = 1
                    regex=[{
                        'pattern': r'^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\w]{0,42}))$',  # noqa: E501
                    }]
            created = schemas.DateTimeSchema
            encryptionEnabled = schemas.BoolSchema
            
            
            class groupId(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 24
                    min_length = 24
                    regex=[{
                        'pattern': r'^([a-f0-9]{24})$',  # noqa: E501
                    }]
            
            
            class hashes(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ApiRestoreJobFileHashView']:
                        return ApiRestoreJobFileHashView
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['ApiRestoreJobFileHashView'], typing.List['ApiRestoreJobFileHashView']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'hashes':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ApiRestoreJobFileHashView':
                    return super().__getitem__(i)
            
            
            class id(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 24
                    min_length = 24
                    regex=[{
                        'pattern': r'^([a-f0-9]{24})$',  # noqa: E501
                    }]
            
            
            class links(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['Link']:
                        return Link
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['Link'], typing.List['Link']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'links':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'Link':
                    return super().__getitem__(i)
            masterKeyUUID = schemas.UUIDSchema
            
            
            class oplogInc(
                schemas.Int32Schema
            ):
            
            
                class MetaOapg:
                    format = 'int32'
                    inclusive_minimum = 1
            
            
            class oplogTs(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    regex=[{
                        'pattern': r'^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d)$',  # noqa: E501
                    }]
            
            
            class pointInTimeUTCMillis(
                schemas.Int64Schema
            ):
            
            
                class MetaOapg:
                    format = 'int64'
                    inclusive_minimum = 1199145600000
            
            
            class snapshotId(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 24
                    min_length = 24
                    regex=[{
                        'pattern': r'^([a-f0-9]{24})$',  # noqa: E501
                    }]
            
            
            class statusName(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "IN_PROGRESS": "IN_PROGRESS",
                        "BROKEN": "BROKEN",
                        "KILLED": "KILLED",
                        "FINISHED": "FINISHED",
                    }
                
                @schemas.classproperty
                def IN_PROGRESS(cls):
                    return cls("IN_PROGRESS")
                
                @schemas.classproperty
                def BROKEN(cls):
                    return cls("BROKEN")
                
                @schemas.classproperty
                def KILLED(cls):
                    return cls("KILLED")
                
                @schemas.classproperty
                def FINISHED(cls):
                    return cls("FINISHED")
        
            @staticmethod
            def timestamp() -> typing.Type['ApiBSONTimestampView']:
                return ApiBSONTimestampView
            __annotations__ = {
                "delivery": delivery,
                "batchId": batchId,
                "checkpointId": checkpointId,
                "clusterId": clusterId,
                "clusterName": clusterName,
                "created": created,
                "encryptionEnabled": encryptionEnabled,
                "groupId": groupId,
                "hashes": hashes,
                "id": id,
                "links": links,
                "masterKeyUUID": masterKeyUUID,
                "oplogInc": oplogInc,
                "oplogTs": oplogTs,
                "pointInTimeUTCMillis": pointInTimeUTCMillis,
                "snapshotId": snapshotId,
                "statusName": statusName,
                "timestamp": timestamp,
            }
    
    delivery: 'ApiRestoreJobDeliveryView'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["delivery"]) -> 'ApiRestoreJobDeliveryView': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["batchId"]) -> MetaOapg.properties.batchId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["checkpointId"]) -> MetaOapg.properties.checkpointId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["clusterId"]) -> MetaOapg.properties.clusterId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["clusterName"]) -> MetaOapg.properties.clusterName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created"]) -> MetaOapg.properties.created: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["encryptionEnabled"]) -> MetaOapg.properties.encryptionEnabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["groupId"]) -> MetaOapg.properties.groupId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hashes"]) -> MetaOapg.properties.hashes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["links"]) -> MetaOapg.properties.links: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["masterKeyUUID"]) -> MetaOapg.properties.masterKeyUUID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["oplogInc"]) -> MetaOapg.properties.oplogInc: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["oplogTs"]) -> MetaOapg.properties.oplogTs: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pointInTimeUTCMillis"]) -> MetaOapg.properties.pointInTimeUTCMillis: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["snapshotId"]) -> MetaOapg.properties.snapshotId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statusName"]) -> MetaOapg.properties.statusName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timestamp"]) -> 'ApiBSONTimestampView': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["delivery", "batchId", "checkpointId", "clusterId", "clusterName", "created", "encryptionEnabled", "groupId", "hashes", "id", "links", "masterKeyUUID", "oplogInc", "oplogTs", "pointInTimeUTCMillis", "snapshotId", "statusName", "timestamp", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["delivery"]) -> 'ApiRestoreJobDeliveryView': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["batchId"]) -> typing.Union[MetaOapg.properties.batchId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["checkpointId"]) -> typing.Union[MetaOapg.properties.checkpointId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["clusterId"]) -> typing.Union[MetaOapg.properties.clusterId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["clusterName"]) -> typing.Union[MetaOapg.properties.clusterName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created"]) -> typing.Union[MetaOapg.properties.created, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["encryptionEnabled"]) -> typing.Union[MetaOapg.properties.encryptionEnabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["groupId"]) -> typing.Union[MetaOapg.properties.groupId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hashes"]) -> typing.Union[MetaOapg.properties.hashes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["links"]) -> typing.Union[MetaOapg.properties.links, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["masterKeyUUID"]) -> typing.Union[MetaOapg.properties.masterKeyUUID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["oplogInc"]) -> typing.Union[MetaOapg.properties.oplogInc, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["oplogTs"]) -> typing.Union[MetaOapg.properties.oplogTs, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pointInTimeUTCMillis"]) -> typing.Union[MetaOapg.properties.pointInTimeUTCMillis, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["snapshotId"]) -> typing.Union[MetaOapg.properties.snapshotId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statusName"]) -> typing.Union[MetaOapg.properties.statusName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timestamp"]) -> typing.Union['ApiBSONTimestampView', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["delivery", "batchId", "checkpointId", "clusterId", "clusterName", "created", "encryptionEnabled", "groupId", "hashes", "id", "links", "masterKeyUUID", "oplogInc", "oplogTs", "pointInTimeUTCMillis", "snapshotId", "statusName", "timestamp", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        delivery: 'ApiRestoreJobDeliveryView',
        batchId: typing.Union[MetaOapg.properties.batchId, str, schemas.Unset] = schemas.unset,
        checkpointId: typing.Union[MetaOapg.properties.checkpointId, str, schemas.Unset] = schemas.unset,
        clusterId: typing.Union[MetaOapg.properties.clusterId, str, schemas.Unset] = schemas.unset,
        clusterName: typing.Union[MetaOapg.properties.clusterName, str, schemas.Unset] = schemas.unset,
        created: typing.Union[MetaOapg.properties.created, str, datetime, schemas.Unset] = schemas.unset,
        encryptionEnabled: typing.Union[MetaOapg.properties.encryptionEnabled, bool, schemas.Unset] = schemas.unset,
        groupId: typing.Union[MetaOapg.properties.groupId, str, schemas.Unset] = schemas.unset,
        hashes: typing.Union[MetaOapg.properties.hashes, list, tuple, schemas.Unset] = schemas.unset,
        id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
        links: typing.Union[MetaOapg.properties.links, list, tuple, schemas.Unset] = schemas.unset,
        masterKeyUUID: typing.Union[MetaOapg.properties.masterKeyUUID, str, uuid.UUID, schemas.Unset] = schemas.unset,
        oplogInc: typing.Union[MetaOapg.properties.oplogInc, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        oplogTs: typing.Union[MetaOapg.properties.oplogTs, str, schemas.Unset] = schemas.unset,
        pointInTimeUTCMillis: typing.Union[MetaOapg.properties.pointInTimeUTCMillis, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        snapshotId: typing.Union[MetaOapg.properties.snapshotId, str, schemas.Unset] = schemas.unset,
        statusName: typing.Union[MetaOapg.properties.statusName, str, schemas.Unset] = schemas.unset,
        timestamp: typing.Union['ApiBSONTimestampView', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ApiRestoreJobView':
        return super().__new__(
            cls,
            *_args,
            delivery=delivery,
            batchId=batchId,
            checkpointId=checkpointId,
            clusterId=clusterId,
            clusterName=clusterName,
            created=created,
            encryptionEnabled=encryptionEnabled,
            groupId=groupId,
            hashes=hashes,
            id=id,
            links=links,
            masterKeyUUID=masterKeyUUID,
            oplogInc=oplogInc,
            oplogTs=oplogTs,
            pointInTimeUTCMillis=pointInTimeUTCMillis,
            snapshotId=snapshotId,
            statusName=statusName,
            timestamp=timestamp,
            _configuration=_configuration,
            **kwargs,
        )

from atlas.model.api_bson_timestamp_view import ApiBSONTimestampView
from atlas.model.api_restore_job_delivery_view import ApiRestoreJobDeliveryView
from atlas.model.api_restore_job_file_hash_view import ApiRestoreJobFileHashView
from atlas.model.link import Link
